<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (14.0.2) on Fri Nov 06 14:01:10 EST 2020 -->
<title>ClassServer</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="dc.created" content="2020-11-06">
<meta name="description" content="declaration: module: HW08, package: provided.rmiUtils.classServer, class: ClassServer">
<meta name="generator" content="javadoc/ClassWriterImpl">
<link rel="stylesheet" type="text/css" href="../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../script-dir/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../script.js"></script>
<script type="text/javascript" src="../../../../script-dir/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../script-dir/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../script-dir/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../script-dir/jquery-3.4.1.js"></script>
<script type="text/javascript" src="../../../../script-dir/jquery-ui.js"></script>
</head>
<body class="class-declaration">
<script type="text/javascript">var data = {"i0":6,"i1":9,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../";
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class="flexBox">
<header role="banner" class="flexHeader">
<nav role="navigation">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../module-summary.html">Module</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ClassServer.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<div class="navListSearch"><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</div>
</div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="skipNav"><a id="skip.navbar.top">
<!--   -->
</a></div>
</nav>
</header>
<div class="flexContent">
<main role="main">
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle"><span class="moduleLabelInType">Module</span>&nbsp;<a href="../../../module-summary.html">HW08</a></div>
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">provided.rmiUtils.classServer</a></div>
<h1 title="Class ClassServer" class="title">Class ClassServer</h1>
</div>
<div class="contentContainer">
<div class="inheritance" title="Inheritance Tree">java.lang.Object
<div class="inheritance">provided.rmiUtils.classServer.ClassServer</div>
</div>
<section class="description">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code>java.lang.Runnable</code></dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><code><a href="ClassFileServer.html" title="class in provided.rmiUtils.classServer">ClassFileServer</a></code>, <code><a href="ClassFileServerResources.html" title="class in provided.rmiUtils.classServer">ClassFileServerResources</a></code></dd>
</dl>
<hr>
<pre>public abstract class <span class="typeNameLabel">ClassServer</span>
extends java.lang.Object
implements java.lang.Runnable</pre>
<div class="block">ClassServer is an abstract class that provides the
 basic functionality of a mini-webserver, specialized
 to load class files only. A ClassServer must be extended
 and the concrete subclass should define the <b>getBytes</b>
 method which is responsible for retrieving the bytecodes
 for a class.<p>

 The ClassServer creates a thread that listens on a socket
 and accepts  HTTP GET requests. The HTTP response contains the
 bytecodes for the class that requested in the GET header. <p>

 For loading remote classes, an RMI application can use a concrete
 subclass of this server in place of an HTTP server. 
 
 swong 4/7/19: Modified to handle arbitrary file types, not just class files</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="ClassFileServer.html" title="class in provided.rmiUtils.classServer"><code>ClassFileServer</code></a></dd>
</dl>
</section>
<section class="summary">
<ul class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<li class="blockList">
<section class="nestedClassSummary"><a id="nested.class.summary">
<!--   -->
</a>
<h2>Nested Class Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Class</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<td class="colFirst"><code>protected static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="ClassServer.PathSuffix.html" title="class in provided.rmiUtils.classServer">ClassServer.PathSuffix</a></span></code></th>
<td class="colLast">
<div class="block">Utility class to hold both a pathname and the suffix of a filename</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- =========== FIELD SUMMARY =========== -->
<li class="blockList">
<section class="fieldSummary"><a id="field.summary">
<!--   -->
</a>
<h2>Field Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<td class="colFirst"><code>private java.util.function.Consumer&lt;java.lang.String&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#errMsgStrategy">errMsgStrategy</a></span></code></th>
<td class="colLast">
<div class="block">Strategy to display an error message.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.util.function.Consumer&lt;java.lang.String&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#infoMsgStrategy">infoMsgStrategy</a></span></code></th>
<td class="colLast">
<div class="block">Strategy to display an informational message.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isStop">isStop</a></span></code></th>
<td class="colLast">
<div class="block">Flag to used to stop the server</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.net.ServerSocket</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#server">server</a></span></code></th>
<td class="colLast">
<div class="block">The socket object the server uses</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<li class="blockList">
<section class="constructorSummary"><a id="constructor.summary">
<!--   -->
</a>
<h2>Constructor Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Modifier</th>
<th class="colSecond" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<td class="colFirst"><code>protected </code></td>
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(int)">ClassServer</a></span>&#8203;(int&nbsp;port)</code></th>
<td class="colLast">
<div class="block">Constructs a ClassServer that listens on <b>port</b> and
 obtains a class's bytecodes using the method <b>getBytes</b>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>protected </code></td>
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(int,java.util.function.Consumer,java.util.function.Consumer)">ClassServer</a></span>&#8203;(int&nbsp;port,
java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;infoMsgStrategy,
java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;errMsgStrategy)</code></th>
<td class="colLast">
<div class="block">Constructs a ClassServer that listens on <b>port</b> and
 obtains a class's bytecodes using the method <b>getBytes</b>.</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ========== METHOD SUMMARY =========== -->
<li class="blockList">
<section class="methodSummary"><a id="method.summary">
<!--   -->
</a>
<h2>Method Summary</h2>
<div class="memberSummary">
<div role="tablist" aria-orientation="horizontal"><button role="tab" aria-selected="true" aria-controls="memberSummary_tabpanel" tabindex="0" onkeydown="switchTab(event)" id="t0" class="activeTableTab">All Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t1" class="tableTab" onclick="show(1);">Static Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t2" class="tableTab" onclick="show(2);">Instance Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t3" class="tableTab" onclick="show(4);">Abstract Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t4" class="tableTab" onclick="show(8);">Concrete Methods</button></div>
<div id="memberSummary_tabpanel" role="tabpanel">
<table aria-labelledby="t0">
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor" id="i0">
<td class="colFirst"><code>abstract byte[]</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getBytes(provided.rmiUtils.classServer.ClassServer.PathSuffix)">getBytes</a></span>&#8203;(<a href="ClassServer.PathSuffix.html" title="class in provided.rmiUtils.classServer">ClassServer.PathSuffix</a>&nbsp;pathSuffix)</code></th>
<td class="colLast">
<div class="block">Returns an array of bytes containing the bytecodes for
 the class represented by the argument <b>path</b>.</div>
</td>
</tr>
<tr class="rowColor" id="i1">
<td class="colFirst"><code>private static <a href="ClassServer.PathSuffix.html" title="class in provided.rmiUtils.classServer">ClassServer.PathSuffix</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPath(java.io.BufferedReader)">getPath</a></span>&#8203;(java.io.BufferedReader&nbsp;in)</code></th>
<td class="colLast">
<div class="block">Returns the path to the class file obtained from
 parsing the HTML header.</div>
</td>
</tr>
<tr class="altColor" id="i2">
<td class="colFirst"><code>private void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#newListener()">newListener</a></span>()</code></th>
<td class="colLast">
<div class="block">Create a new thread to listen.</div>
</td>
</tr>
<tr class="rowColor" id="i3">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#run()">run</a></span>()</code></th>
<td class="colLast">
<div class="block">The "listen" thread that accepts a connection to the
 server, parses the header to obtain the class file name
 and sends back the bytecodes for the class (or error
 if the class is not found or the response was malformed).</div>
</td>
</tr>
<tr class="altColor" id="i4">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#showErrorMsg(java.lang.String)">showErrorMsg</a></span>&#8203;(java.lang.String&nbsp;msg)</code></th>
<td class="colLast">
<div class="block">Encapsulated behavior to show an error message</div>
</td>
</tr>
<tr class="rowColor" id="i5">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#showInfoMsg(java.lang.String)">showInfoMsg</a></span>&#8203;(java.lang.String&nbsp;msg)</code></th>
<td class="colLast">
<div class="block">Encapsulated behavior to show an informational message</div>
</td>
</tr>
<tr class="altColor" id="i6">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#stop()">stop</a></span>()</code></th>
<td class="colLast">
<div class="block">Stops the server</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="inheritedList">
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a><code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></div>
</section>
</li>
</ul>
</section>
<section class="details">
<ul class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<li class="blockList">
<section class="fieldDetails"><a id="field.detail">
<!--   -->
</a>
<h2>Field Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="server">server</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">java.net.ServerSocket</span>&nbsp;<span class="memberName">server</span></div>
<div class="block">The socket object the server uses</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="isStop">isStop</a></h3>
<div class="memberSignature"><span class="modifiers">private volatile</span>&nbsp;<span class="returnType">boolean</span>&nbsp;<span class="memberName">isStop</span></div>
<div class="block">Flag to used to stop the server</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="infoMsgStrategy">infoMsgStrategy</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">java.util.function.Consumer&lt;java.lang.String&gt;</span>&nbsp;<span class="memberName">infoMsgStrategy</span></div>
<div class="block">Strategy to display an informational message.  Defaults to
 System.out.println()</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="errMsgStrategy">errMsgStrategy</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">java.util.function.Consumer&lt;java.lang.String&gt;</span>&nbsp;<span class="memberName">errMsgStrategy</span></div>
<div class="block">Strategy to display an error message.  Defaults to
 System.err.println()</div>
</section>
</li>
</ul>
</section>
</li>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<li class="blockList">
<section class="constructorDetails"><a id="constructor.detail">
<!--   -->
</a>
<h2>Constructor Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="&lt;init&gt;(int)">ClassServer</a></h3>
<div class="memberSignature"><span class="modifiers">protected</span>&nbsp;<span class="memberName">ClassServer</span>&#8203;(<span class="arguments">int&nbsp;port)</span>
               throws <span class="exceptions">java.io.IOException</span></div>
<div class="block">Constructs a ClassServer that listens on <b>port</b> and
 obtains a class's bytecodes using the method <b>getBytes</b>.
 This constructor uses the default System.out.println() and 
 System.err.println() methods to display info and error messages
 respectively.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>port</code> - the port number</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code> - if the ClassServer could not listen
            on <b>port</b>.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="&lt;init&gt;(int,java.util.function.Consumer,java.util.function.Consumer)">ClassServer</a></h3>
<div class="memberSignature"><span class="modifiers">protected</span>&nbsp;<span class="memberName">ClassServer</span>&#8203;(<span class="arguments">int&nbsp;port,
java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;infoMsgStrategy,
java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;errMsgStrategy)</span>
               throws <span class="exceptions">java.io.IOException</span></div>
<div class="block">Constructs a ClassServer that listens on <b>port</b> and
 obtains a class's bytecodes using the method <b>getBytes</b>.
 This constructor explicitly defines the strategies to use for 
 displaying info and error messages.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>port</code> - the port number</dd>
<dd><code>infoMsgStrategy</code> - Strategy to display an info message.  
 Recommended: For increased system robustness, this strategy 
 should first write to System.out.println()</dd>
<dd><code>errMsgStrategy</code> - Strategy to display an error message.  
 Recommended: For increased system robustness, this strategy 
 should first write to System.err.println()</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code> - if the ClassServer could not listen on <b>port</b>.</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
<!-- ============ METHOD DETAIL ========== -->
<li class="blockList">
<section class="methodDetails"><a id="method.detail">
<!--   -->
</a>
<h2>Method Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="getBytes(provided.rmiUtils.classServer.ClassServer.PathSuffix)">getBytes</a></h3>
<div class="memberSignature"><span class="modifiers">public abstract</span>&nbsp;<span class="returnType">byte[]</span>&nbsp;<span class="memberName">getBytes</span>&#8203;(<span class="arguments"><a href="ClassServer.PathSuffix.html" title="class in provided.rmiUtils.classServer">ClassServer.PathSuffix</a>&nbsp;pathSuffix)</span>
                         throws <span class="exceptions">java.io.IOException,
java.lang.ClassNotFoundException</span></div>
<div class="block">Returns an array of bytes containing the bytecodes for
 the class represented by the argument <b>path</b>.
 The <b>path</b> is a dot separated class name with
 the ".class" extension removed.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pathSuffix</code> - The pathname and suffic of the desired class</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the byte codes for the class</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.ClassNotFoundException</code> - if the class corresponding
 to <b>path</b> could not be loaded.</dd>
<dd><code>java.io.IOException</code> - if error occurs reading the class</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="stop()">stop</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">stop</span>()</div>
<div class="block">Stops the server</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="run()">run</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">run</span>()</div>
<div class="block">The "listen" thread that accepts a connection to the
 server, parses the header to obtain the class file name
 and sends back the bytecodes for the class (or error
 if the class is not found or the response was malformed).</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>run</code>&nbsp;in interface&nbsp;<code>java.lang.Runnable</code></dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="newListener()">newListener</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">newListener</span>()</div>
<div class="block">Create a new thread to listen.</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getPath(java.io.BufferedReader)">getPath</a></h3>
<div class="memberSignature"><span class="modifiers">private static</span>&nbsp;<span class="returnType"><a href="ClassServer.PathSuffix.html" title="class in provided.rmiUtils.classServer">ClassServer.PathSuffix</a></span>&nbsp;<span class="memberName">getPath</span>&#8203;(<span class="arguments">java.io.BufferedReader&nbsp;in)</span>
                                       throws <span class="exceptions">java.io.IOException</span></div>
<div class="block">Returns the path to the class file obtained from
 parsing the HTML header.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>in</code> - stream from which the header is read.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the path to the desired file</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.io.IOException</code> - if the stream cannot be correctly read</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="showInfoMsg(java.lang.String)">showInfoMsg</a></h3>
<div class="memberSignature"><span class="modifiers">protected</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">showInfoMsg</span>&#8203;(<span class="arguments">java.lang.String&nbsp;msg)</span></div>
<div class="block">Encapsulated behavior to show an informational message</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msg</code> - Message to show.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="showErrorMsg(java.lang.String)">showErrorMsg</a></h3>
<div class="memberSignature"><span class="modifiers">protected</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">showErrorMsg</span>&#8203;(<span class="arguments">java.lang.String&nbsp;msg)</span></div>
<div class="block">Encapsulated behavior to show an error message</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msg</code> - Message to show.</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
</ul>
</section>
</div>
<!-- ========= END OF CLASS DATA ========= -->
</main>
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../module-summary.html">Module</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ClassServer.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</div>
</div>
</body>
</html>
