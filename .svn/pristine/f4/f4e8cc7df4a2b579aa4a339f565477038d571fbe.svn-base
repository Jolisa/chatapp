<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (14.0.2) on Fri Nov 06 14:01:10 EST 2020 -->
<title>RMIUtils</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="dc.created" content="2020-11-06">
<meta name="description" content="declaration: module: HW08, package: provided.rmiUtils, class: RMIUtils">
<meta name="generator" content="javadoc/ClassWriterImpl">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../script-dir/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
<script type="text/javascript" src="../../../script-dir/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../script-dir/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../script-dir/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../script-dir/jquery-3.4.1.js"></script>
<script type="text/javascript" src="../../../script-dir/jquery-ui.js"></script>
</head>
<body class="class-declaration">
<script type="text/javascript">var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../";
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class="flexBox">
<header role="banner" class="flexHeader">
<nav role="navigation">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../module-summary.html">Module</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/RMIUtils.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<div class="navListSearch"><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</div>
</div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="skipNav"><a id="skip.navbar.top">
<!--   -->
</a></div>
</nav>
</header>
<div class="flexContent">
<main role="main">
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle"><span class="moduleLabelInType">Module</span>&nbsp;<a href="../../module-summary.html">HW08</a></div>
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">provided.rmiUtils</a></div>
<h1 title="Class RMIUtils" class="title">Class RMIUtils</h1>
</div>
<div class="contentContainer">
<div class="inheritance" title="Inheritance Tree">java.lang.Object
<div class="inheritance">provided.rmiUtils.RMIUtils</div>
</div>
<section class="description">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code><a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">RMIUtils</span>
extends java.lang.Object
implements <a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></pre>
<div class="block">Concrete implementaion of the IRMIUtils, which are utilities to make it 
 easier to start/stop the RMI system, access local/remote Registries and 
 get the local IP address.   <em>It is NOT recommended that students write
 their own RMI management code as this code has been thoroughly tested and 
 should satify all the needs of the project.</em></div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>swong</dd>
</dl>
</section>
<section class="summary">
<ul class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<li class="blockList">
<section class="fieldSummary"><a id="field.summary">
<!--   -->
</a>
<h2>Field Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<td class="colFirst"><code>private <a href="classServer/ClassServer.html" title="class in provided.rmiUtils.classServer">ClassServer</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#classFileServer">classFileServer</a></span></code></th>
<td class="colLast">
<div class="block">A class file server to enable remote dynamic class loading of the
 ICompute object.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.util.function.Consumer&lt;java.lang.String&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#errMsgStrategy">errMsgStrategy</a></span></code></th>
<td class="colLast">
<div class="block">Strategy to display an error message.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private java.util.function.Consumer&lt;java.lang.String&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#infoMsgStrategy">infoMsgStrategy</a></span></code></th>
<td class="colLast">
<div class="block">Strategy to display an informational message.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#last_addr">last_addr</a></span></code></th>
<td class="colLast">
<div class="block">The last address selected for use.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#privateAddrOnly">privateAddrOnly</a></span></code></th>
<td class="colLast">
<div class="block">If true, then only detects private IP addresses.</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<li class="blockList">
<section class="constructorSummary"><a id="constructor.summary">
<!--   -->
</a>
<h2>Constructor Summary</h2>
<div class="memberSummary">
<table>
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<thead>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(java.util.function.Consumer)">RMIUtils</a></span>&#8203;(java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;outputCmd)</code></th>
<td class="colLast">
<div class="block">Constructor for the class.</div>
</td>
</tr>
<tr class="rowColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(java.util.function.Consumer,boolean)">RMIUtils</a></span>&#8203;(java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;outputCmd,
boolean&nbsp;privateAddrOnly)</code></th>
<td class="colLast">
<div class="block">Auxiliary constructor used to set the getLocalAddress() method to return non-private addresses, 
 e.g.</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ========== METHOD SUMMARY =========== -->
<li class="blockList">
<section class="methodSummary"><a id="method.summary">
<!--   -->
</a>
<h2>Method Summary</h2>
<div class="memberSummary">
<div role="tablist" aria-orientation="horizontal"><button role="tab" aria-selected="true" aria-controls="memberSummary_tabpanel" tabindex="0" onkeydown="switchTab(event)" id="t0" class="activeTableTab">All Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t2" class="tableTab" onclick="show(2);">Instance Methods</button><button role="tab" aria-selected="false" aria-controls="memberSummary_tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t4" class="tableTab" onclick="show(8);">Concrete Methods</button></div>
<div id="memberSummary_tabpanel" role="tabpanel">
<table aria-labelledby="t0">
<thead>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="altColor" id="i0">
<td class="colFirst"><code>private void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#addPrivateAddr(java.lang.String,java.util.ArrayList)">addPrivateAddr</a></span>&#8203;(java.lang.String&nbsp;hostAddress,
java.util.ArrayList&lt;java.lang.String&gt;&nbsp;addr_choices)</code></th>
<td class="colLast">
<div class="block">Adds the given host address to the addr_choices ArrayList if the host address is a private address, i.e.</div>
</td>
</tr>
<tr class="rowColor" id="i1">
<td class="colFirst"><code>private void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#configRMIProperties(int)">configRMIProperties</a></span>&#8203;(int&nbsp;classServerPort)</code></th>
<td class="colLast">
<div class="block">Sets the java.rmi.server.hostname and java.rmi.server.codebase
 system properties which control the automatic remote dynamic 
 class loading.</div>
</td>
</tr>
<tr class="altColor" id="i2">
<td class="colFirst"><code>private void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#configSecurityManager()">configSecurityManager</a></span>()</code></th>
<td class="colLast">
<div class="block">Sets the java.security.policy system property to point at the location 
 of the security policy file, which is assumed to be at 
 "provided\rmiUtils\server.policy"  (file separators adjusted to 
 match operating system).</div>
</td>
</tr>
<tr class="rowColor" id="i3">
<td class="colFirst"><code>java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLocalAddress()">getLocalAddress</a></span>()</code></th>
<td class="colLast">
<div class="block">This method is designed to reliably return the actual local IP address
 across multiple platforms, particularly Linux.</div>
</td>
</tr>
<tr class="altColor" id="i4">
<td class="colFirst"><code>java.rmi.registry.Registry</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getLocalRegistry()">getLocalRegistry</a></span>()</code></th>
<td class="colLast">
<div class="block">Returns the Registry on the local machine on port
 IRMI_Defs.REGISTRY_PORT, as a server would require.</div>
</td>
</tr>
<tr class="rowColor" id="i5">
<td class="colFirst"><code>java.rmi.registry.Registry</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRemoteRegistry(java.lang.String)">getRemoteRegistry</a></span>&#8203;(java.lang.String&nbsp;host)</code></th>
<td class="colLast">
<div class="block">Returns the Registry on the given machine on port
 IRMI_Defs.REGISTRY_PORT, as a client would require.</div>
</td>
</tr>
<tr class="altColor" id="i6">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#showErrorMsg(java.lang.String)">showErrorMsg</a></span>&#8203;(java.lang.String&nbsp;msg)</code></th>
<td class="colLast">
<div class="block">Encapsulated behavior to show an error message</div>
</td>
</tr>
<tr class="rowColor" id="i7">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#showInfoMsg(java.lang.String)">showInfoMsg</a></span>&#8203;(java.lang.String&nbsp;msg)</code></th>
<td class="colLast">
<div class="block">Encapsulated behavior to show an informational message</div>
</td>
</tr>
<tr class="altColor" id="i8">
<td class="colFirst"><code>private void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#startClassFileServer(int)">startClassFileServer</a></span>&#8203;(int&nbsp;classServerPort)</code></th>
<td class="colLast">
<div class="block">Start the class file server to support remote dynamic class loading.</div>
</td>
</tr>
<tr class="rowColor" id="i9">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#startRMI(int)">startRMI</a></span>&#8203;(int&nbsp;classServerPort)</code></th>
<td class="colLast">
<div class="block">Start up the RMI system.</div>
</td>
</tr>
<tr class="altColor" id="i10">
<td class="colFirst"><code>private void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#stopClassFileServer()">stopClassFileServer</a></span>()</code></th>
<td class="colLast">
<div class="block">Stop the class file server and reset the reference to it, 
 "classFileServer", to null.</div>
</td>
</tr>
<tr class="rowColor" id="i11">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#stopRMI()">stopRMI</a></span>()</code></th>
<td class="colLast">
<div class="block">Performs all necessary work to shut the RMI system down,
 such as shut the class server down.</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="inheritedList">
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a><code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></div>
<div class="inheritedList">
<h3>Methods inherited from interface&nbsp;provided.rmiUtils.<a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></h3>
<a id="methods.inherited.from.class.provided.rmiUtils.IRMIUtils">
<!--   -->
</a><code><a href="IRMIUtils.html#getClassFileServerURL()">getClassFileServerURL</a></code></div>
</section>
</li>
</ul>
</section>
<section class="details">
<ul class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<li class="blockList">
<section class="fieldDetails"><a id="field.detail">
<!--   -->
</a>
<h2>Field Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="privateAddrOnly">privateAddrOnly</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">boolean</span>&nbsp;<span class="memberName">privateAddrOnly</span></div>
<div class="block">If true, then only detects private IP addresses.   
 Should be set false for server use (i.e. non-private addresses).   
 See auxiliary constructor.</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="last_addr">last_addr</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">java.lang.String</span>&nbsp;<span class="memberName">last_addr</span></div>
<div class="block">The last address selected for use.</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="infoMsgStrategy">infoMsgStrategy</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">java.util.function.Consumer&lt;java.lang.String&gt;</span>&nbsp;<span class="memberName">infoMsgStrategy</span></div>
<div class="block">Strategy to display an informational message.  Defaults to
 System.out.println()</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="errMsgStrategy">errMsgStrategy</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">java.util.function.Consumer&lt;java.lang.String&gt;</span>&nbsp;<span class="memberName">errMsgStrategy</span></div>
<div class="block">Strategy to display an error message.  Defaults to
 System.err.println()</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="classFileServer">classFileServer</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType"><a href="classServer/ClassServer.html" title="class in provided.rmiUtils.classServer">ClassServer</a></span>&nbsp;<span class="memberName">classFileServer</span></div>
<div class="block">A class file server to enable remote dynamic class loading of the
 ICompute object.</div>
</section>
</li>
</ul>
</section>
</li>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<li class="blockList">
<section class="constructorDetails"><a id="constructor.detail">
<!--   -->
</a>
<h2>Constructor Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="&lt;init&gt;(java.util.function.Consumer)">RMIUtils</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="memberName">RMIUtils</span>&#8203;(<span class="arguments">java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;outputCmd)</span></div>
<div class="block">Constructor for the class. Combines the given output command with the
 internal default commands to send status info to both the view connected 
 to by the input outputCmd as well as standard out and error.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>outputCmd</code> - command used to output status and error information</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - If the given outputCmd is null.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="&lt;init&gt;(java.util.function.Consumer,boolean)">RMIUtils</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="memberName">RMIUtils</span>&#8203;(<span class="arguments">java.util.function.Consumer&lt;java.lang.String&gt;&nbsp;outputCmd,
boolean&nbsp;privateAddrOnly)</span></div>
<div class="block">Auxiliary constructor used to set the getLocalAddress() method to return non-private addresses, 
 e.g. when used on a server rather than a wireless laptop.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>outputCmd</code> - command used to output status and error information</dd>
<dd><code>privateAddrOnly</code> - If false, will look for non-private IP addresses as well.</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
<!-- ============ METHOD DETAIL ========== -->
<li class="blockList">
<section class="methodDetails"><a id="method.detail">
<!--   -->
</a>
<h2>Method Details</h2>
<ul class="blockList">
<li class="blockList">
<section class="detail">
<h3><a id="getLocalRegistry()">getLocalRegistry</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.rmi.registry.Registry</span>&nbsp;<span class="memberName">getLocalRegistry</span>()</div>
<div class="block">Returns the Registry on the local machine on port
 IRMI_Defs.REGISTRY_PORT, as a server would require. Creates the Registry
 if it isn't already running. Returns null system if unable to create a
 Registry if needed.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="IRMIUtils.html#getLocalRegistry()">getLocalRegistry</a></code>&nbsp;in interface&nbsp;<code><a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the Registry or null if no Registry could be made or found.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getRemoteRegistry(java.lang.String)">getRemoteRegistry</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.rmi.registry.Registry</span>&nbsp;<span class="memberName">getRemoteRegistry</span>&#8203;(<span class="arguments">java.lang.String&nbsp;host)</span></div>
<div class="block">Returns the Registry on the given machine on port
 IRMI_Defs.REGISTRY_PORT, as a client would require.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="IRMIUtils.html#getRemoteRegistry(java.lang.String)">getRemoteRegistry</a></code>&nbsp;in interface&nbsp;<code><a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>host</code> - the IP address or host name of the remote machine.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>The remote Registry or null if it could not be located.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if host is null or an empty string.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="getLocalAddress()">getLocalAddress</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">java.lang.String</span>&nbsp;<span class="memberName">getLocalAddress</span>()
                                 throws <span class="exceptions">java.net.SocketException,
java.net.UnknownHostException</span></div>
<div class="block">This method is designed to reliably return the actual local IP address
 across multiple platforms, particularly Linux. This method is a
 replacement for "java.net.InetAddress.getLocalHost().getHostAddress()"
 which will return the loopback address in Linux, not the actual IP
 address. Also, Java tends to report many virtual network adapters as 
 "non-virtual".  This method only returns IPv4 addresses, not IPv6 addresses,
 which are non-loopback, operational and non-virtual, as reported by Java.   
 By default, privateAddrOnly is set to true, so only private IP addresses are 
 detected.   If privateAddr = false (having used the auxiliary constructor)
 then all valid addresses are detected. If multiple potentially valid addresses are 
 detected, then a dialog box will pop up to ask the user to select the proper address.
 The selected address is cached so the next call to getLocalAddress() will simply return
 the cached address value.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="IRMIUtils.html#getLocalAddress()">getLocalAddress</a></code>&nbsp;in interface&nbsp;<code><a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>A non-loopback, non-virtual IPv4 address found for the system.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.net.SocketException</code> - thrown when there is a problem retrieving the network
             interfaces.</dd>
<dd><code>java.net.UnknownHostException</code> - thrown when the local host address cannot be found.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="addPrivateAddr(java.lang.String,java.util.ArrayList)">addPrivateAddr</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">addPrivateAddr</span>&#8203;(<span class="arguments">java.lang.String&nbsp;hostAddress,
java.util.ArrayList&lt;java.lang.String&gt;&nbsp;addr_choices)</span></div>
<div class="block">Adds the given host address to the addr_choices ArrayList if the host address is a private address, i.e.
 10.x.x.x, 192.188.x.x or 172.16.x.x-172.31.x.x</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>hostAddress</code> - The host address to check and possibly add</dd>
<dd><code>addr_choices</code> - The ArrayList to add the host address to if it is a private address</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="startRMI(int)">startRMI</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">startRMI</span>&#8203;(<span class="arguments">int&nbsp;classServerPort)</span></div>
<div class="block">Start up the RMI system.   This method should be called 
 before any other activity with that involves RMI.   This method
 configures the system properties RMI needs, starts the security
 manager and starts the class server. <br>
 Typical classServerPort values are: <br>
 IRMI_Defs.CLASS_SERVER_PORT_SERVER and <br>
 IRMI_Defs.CLASS_SERVER_PORT_CLIENT</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="IRMIUtils.html#startRMI(int)">startRMI</a></code>&nbsp;in interface&nbsp;<code><a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classServerPort</code> - the port that the class server will use</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="configRMIProperties(int)">configRMIProperties</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">configRMIProperties</span>&#8203;(<span class="arguments">int&nbsp;classServerPort)</span></div>
<div class="block">Sets the java.rmi.server.hostname and java.rmi.server.codebase
 system properties which control the automatic remote dynamic 
 class loading.  This must be called before starting the class server.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classServerPort</code> - The port the class server will use.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="configSecurityManager()">configSecurityManager</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">configSecurityManager</span>()</div>
<div class="block">Sets the java.security.policy system property to point at the location 
 of the security policy file, which is assumed to be at 
 "provided\rmiUtils\server.policy"  (file separators adjusted to 
 match operating system).   the security manager is then started.
 This method must be called before starting the
 class server.</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="startClassFileServer(int)">startClassFileServer</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">startClassFileServer</span>&#8203;(<span class="arguments">int&nbsp;classServerPort)</span></div>
<div class="block">Start the class file server to support remote dynamic class loading.
 This method must be called after configSecurityManager() and 
 configRMIProperties().   If the reference to the class file 
 server, "classFileServer" is null, it is assumed that the class file
 server is not runnng.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classServerPort</code> - the port the class file server will use.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="stopClassFileServer()">stopClassFileServer</a></h3>
<div class="memberSignature"><span class="modifiers">private</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">stopClassFileServer</span>()</div>
<div class="block">Stop the class file server and reset the reference to it, 
 "classFileServer", to null.</div>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="stopRMI()">stopRMI</a></h3>
<div class="memberSignature"><span class="modifiers">public</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">stopRMI</span>()</div>
<div class="block">Performs all necessary work to shut the RMI system down,
 such as shut the class server down.   
 This method MUST be called before exiting the system or phantom 
 processes may persist.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="IRMIUtils.html#stopRMI()">stopRMI</a></code>&nbsp;in interface&nbsp;<code><a href="IRMIUtils.html" title="interface in provided.rmiUtils">IRMIUtils</a></code></dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="showInfoMsg(java.lang.String)">showInfoMsg</a></h3>
<div class="memberSignature"><span class="modifiers">protected</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">showInfoMsg</span>&#8203;(<span class="arguments">java.lang.String&nbsp;msg)</span></div>
<div class="block">Encapsulated behavior to show an informational message</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msg</code> - Message to show.</dd>
</dl>
</section>
</li>
<li class="blockList">
<section class="detail">
<h3><a id="showErrorMsg(java.lang.String)">showErrorMsg</a></h3>
<div class="memberSignature"><span class="modifiers">protected</span>&nbsp;<span class="returnType">void</span>&nbsp;<span class="memberName">showErrorMsg</span>&#8203;(<span class="arguments">java.lang.String&nbsp;msg)</span></div>
<div class="block">Encapsulated behavior to show an error message</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>msg</code> - Message to show.</dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
</ul>
</section>
</div>
<!-- ========= END OF CLASS DATA ========= -->
</main>
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../module-summary.html">Module</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/RMIUtils.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</div>
</div>
</body>
</html>
