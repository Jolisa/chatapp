package jmb26_wmj1.chatapp.chatroom.view;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.SwingUtilities;

import jmb26_wmj1.chatapp.client.view.ClientView;
import java.awt.Color;

public class ChatRoomView extends JPanel {
	
	
	/**
	 * 
	 */
//	private static final long serialVersionUID = -5244971942429407991L;
//	private IChatRoomView2ModelAdapter v2mAdpt; 
//	private final JPanel messagePanel = new JPanel();
//	private final JScrollPane messageScrollPane = new JScrollPane();
//	private final JTextArea messageArea = new JTextArea();
//	private final JPanel chatroomPanel = new JPanel();
//	private final JPanel textPanel = new JPanel();
//	private final JPanel connectButtonsPanel = new JPanel();
//	private final JTextField messageInputTextArea = new JTextField();
//	private final JButton sendTextButton = new JButton("Send Text");
//	private final JButton sendFileButton = new JButton("Send File");
//	
//	
//	//Constructor 
//	
//	public ChatRoomView(IChatRoomView2ModelAdapter adpt) {
//		this.v2mAdpt = adpt;
//		initGUI();
//	}
//	
//	public void updatePanel(String contents) {
//		
//	}
//	
//	public void start() {
//		
//		this.setVisible(true);
//	}
//	private void initGUI() {
//		chatroomPanel.setLayout(new GridLayout(0, 3, 0, 0));
//		chatroomPanel.add(messagePanel);
//		messagePanel.setLayout(new GridLayout(1, 0, 0, 0));
//		messageScrollPane.setToolTipText("scrollpane containing message exchanges");
//		
//		messagePanel.add(messageScrollPane);
//		messageArea.setToolTipText("text area containing message exchanges");
//		
//		
//		messageScrollPane.setViewportView(messageArea);
//		messageArea.append("Welcome to chat! \n");
//		chatroomPanel.add(connectButtonsPanel);
//		messageInputTextArea.setToolTipText("Send text correspondence");
//		messageInputTextArea.setFont(new Font("Lucida Grande", Font.PLAIN, 13));
//		
//		connectButtonsPanel.add(messageInputTextArea);
//		connectButtonsPanel.setLayout(new GridLayout(0, 3, 0, 0));
//		sendTextButton.setToolTipText("Send text");
//		connectButtonsPanel.add(sendTextButton);
//		
//		sendTextButton.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				 SwingUtilities.invokeLater(new Runnable() {
//						public void run() {
//							try {
//								//messageArea.append(messageInputTextArea.getText() + "\n");
//								v2mAdpt.sendText(messageInputTextArea.getText() + "\n");
//							} catch (Exception e) {
//								e.printStackTrace();
//							}
//						}
//					});
//				//view2ModelAdpt.inviteUser(hostComboBox.getItemAt(hostComboBox.getSelectedIndex()), roomsComboBox.getItemAt(roomsComboBox.getSelectedIndex()));
//			}
//		});
//		
//		connectButtonsPanel.add(sendFileButton);
//		sendFileButton.addActionListener(new ActionListener() {
//			public void actionPerformed(ActionEvent e) {
//				
//				
//				
//			}
//		});
//			
//		
//	}
//	
	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	/**
	 * 
	 */
	private static final long serialVersionUID = -5244971942429407991L;

	/**
	 * Adapter for the view to model of the chatroom.
	 */
	private IChatRoomView2ModelAdapter v2mAdpt;
	
	
	/**
	 * Holds the display and control panel.
	 */
	private final JPanel mainPanel = new JPanel();
	/**
	 * Panel for messaging.
	 */
	private final JPanel controlPanel = new JPanel();
	/**
	 * Panel for the display.
	 */
	private final JScrollPane displayPanel = new JScrollPane();
	
	/* Display Panels */
	/**
	 * Area that displays the messages.
	 */
	private final JTextArea textAreaRoom = new JTextArea(15,25);
	//private final JTextPane textAreaRoom = new JTextPane();
	/**
	 * Panel for status.
	 */
	private final JPanel panelText = new JPanel();
	

	/**
	 * 
	 */
	private final JTextField textField = new JTextField();
	/**
	 * Button to send a message in a chatroom.
	 */
	private final JButton btnSendMsg = new JButton("Send Message");
	/**
	 * Panel for messaging and chatrooms.
	 */
	private final JPanel panelMessage = new JPanel();

	/**
	 * Button to leave the chatroom.
	 */
	private final JButton btnLeave = new JButton("Leave Room");
	/**
	 * Button to send unknown message.
	 */
	private final JButton btnSendUnknown = new JButton("Send Image");
	private final JPanel componentPanel = new JPanel();
	//private final JPanel textPanel = new JPanel();
	
	
	
	/**
	 * Constructor
	 * @param adpt IChatRoomView2ModelAdapter
	 */
	public ChatRoomView(IChatRoomView2ModelAdapter adpt) {
		this.v2mAdpt = adpt;
		initGUI();
	}
	
	/**
	 * Starts the view
	 */
	public void start() {
		setVisible(true);
	}
	
	/**
	 * Initializes the view.
	 */
	private void initGUI(){
		
		//mainPanel.setLayout(new FlowLayout());
		mainPanel.setLayout(new GridLayout(1, 3));
		add(mainPanel, BorderLayout.CENTER);
		mainPanel.add(displayPanel);
		mainPanel.add(controlPanel);		
		
		displayPanel.setViewportView(panelText);
		panelText.add(textAreaRoom);
		panelText.add(textAreaRoom, BorderLayout.CENTER);
		
		controlPanel.setLayout(new GridLayout(3, 1));

		
		controlPanel.add(panelMessage);
		panelMessage.setLayout(new BorderLayout(0, 0));
		textField.setColumns(10);
		panelMessage.add(textField, BorderLayout.NORTH);


		
		btnSendUnknown.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				v2mAdpt.sendImage(textField.getText()) ;
				
			}
		});
		btnSendUnknown.setToolTipText("Send unknown message.");
		panelMessage.add(btnSendUnknown, BorderLayout.SOUTH);
		
		panelMessage.add(btnSendMsg, BorderLayout.CENTER);
		btnSendMsg.setToolTipText("Send message to chatroom.");
		btnSendMsg.addActionListener(e -> {
			v2mAdpt.sendText(textField.getText());
			
		});

		controlPanel.add(btnLeave);
		componentPanel.setBackground(Color.WHITE);
		componentPanel.setToolTipText("panel for displaying components");
		
		mainPanel.add(componentPanel);
		//textPanel.setToolTipText("panel where string format messages are sent");
		
		//mainPanel.add(textPanel);
		btnLeave.addActionListener(e -> {
			v2mAdpt.leaveRoom();
			v2mAdpt.removeRoomfromList();
		});
	}
	
	
	
	
	
	
	
	
	
	


	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	public JPanel getPanel() {
		// TODO Auto-generated method stub
		//return chatroomPanel;
		return null; 
	}

	public void updateTextView(String text) {
		//do we need to call this within an invokeLater?
		//messageArea.append(text + "\n");
		textAreaRoom.append(text + "\n");
		//textAreaRoom.setText(text + "\n");
		
	}
	
	
	
	public void addComponent(Component component) {
		JFrame messageFrame = new JFrame("New Component");
		messageFrame.getContentPane().add(component);
		//set size??? 
		messageFrame.setPreferredSize(new Dimension(300, 300));
		messageFrame.pack();
		messageFrame.setLocationRelativeTo(null);;
		messageFrame.setVisible(true);;
		//componentPanel.add(component);
		
		
	}
	
	public void addImageIcon(ImageIcon image) {
		/*JFrame messageFrame = new JFrame("New Component");
		JLabel imagelabel = new JLabel(image);
		messageFrame.getContentPane().add(imagelabel);
		//textAreaRoom.add(messageFrame);
		textAreaRoom.insertIcon(image);*/
		
		
	}



}



